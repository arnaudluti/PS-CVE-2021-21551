<#
    .SYNOPSIS
        Mitigation CVE-2021-21551
    .DESCRIPTION
        Faille privesc sur un driver poussé par l'installateur de DELLSupportAssist ou l'utilitaire de MAJ Bios
        Détecte et supprime celui-ci sur les postes membres du domaine
    .NOTES 
        Author: Arnaud Rigole
        Version: 1.0
        Date: 05/2021
#>
# Requirements
#Requires -Module ActiveDirectory

# Declarations
$testedPCs = "$PSScriptRoot\tested_ok.txt"
$winRMfailedPCs = "$PSScriptRoot\winrm_failed.txt"
$PCs = (Get-AdComputer -Filter {Enabled -eq $true}).DNSHostName


# Creates output files
if (-not(Test-Path $testedPCs)) {
	New-Item -ItemType File -Path $testedPCs
}
if (-not(Test-Path $winRMfailedPCs)) {
	New-Item -ItemType File -Path $winRMfailedPCs
}

:mainloop Foreach ($PC in $PCs) {
    If ($PC -notin (Get-Content $testedPCs)) {
        If ($PC -notin (Get-Content $winRMfailedPCs)) {        
            If (Test-connection $PC -Count 1 -Quiet) {
                Write-Host "[i] Testing computer $PC"
                Try {
                    $sess = New-PSSession -ComputerName $PC -ErrorAction stop
                } Catch {
                    Write-Host -Fore Red "[x] Could not establish PSSession on $PC. Please check WinRM configuration."
                    Add-Content $winRMfailedPCs -Value $PC
                    Continue mainloop;
                }
                # Test if driver is present in windir temp path
                $sysTst = Invoke-Command -Session $sess -ScriptBlock {
                    $SysDrvPath = "$Env:SystemRoot\Temp\dbutil_2_3.sys"
                    If (Test-Path $SysDrvPath) {
                        Write-Host -Fore Yellow "[!] Driver found in $SysDrvPath on computer $Env:ComputerName, trying to delete..."
                        Try {
                            Remove-Item $SysDrvPath -Force -ErrorAction stop
                            Write-Host -Fore Green "[-] ... Driver $SysDrvPath on computer $Env:ComputerName deleted."
                            Write-Output "OK:SYSDIRCLEANED"
                        } Catch {
                            Write-host -Fore Red "[!] Could not delete driver on computer $Env:ComputerName, location: $SysDrvPath"
                            Write-Output "ERROR:SYSDIRNOTCLEANED"
                        }
                    } Else {
                        Write-Output "OK:NOTPRESENTINSYSDIR"
                    } 
                }
                # Test if driver is present in users appdatas   
                $UsrTst = Invoke-Command -Session $sess -ScriptBlock {
                    Foreach ($usr in (Get-ChildItem "$Env:SystemDrive\Users\")) {
                        $UsrDrvPath = "$Env:SystemDrive\Users\$usr\AppData\Local\Temp\dbutil_2_3.sys"
                        If (Test-Path $UsrDrvPath) {
                            Write-Host -Fore Yellow "[!] Driver found in $UsrDrvPath on $Env:ComputerName, trying to delete..."
                            Try {
                                Remove-Item $UsrDrvPath -Force -ErrorAction stop
                                Write-Host -Fore Green "[-] ... Driver $UsrDrvPath on computer $Env:ComputerName deleted."
                                $opt = "OK:USRDIRCLEANED"
                            } Catch {
                                Write-host -Fore Red "[!] Could not delete driver on computer $Env:ComputerName, location: $UsrDrvPath"
                                $opt = "ERROR:USRDIRNOTCLEANED"
                            }
                        } Else {
                            $opt = "OK:NOTPRESENTINUSRDIRS"
                        }
                    }
                    Write-Output $opt
                }
                Remove-PSSession $sess
                if (($SysTst) -match "OK:") {
                    if (($usrTst) -match "OK:") {
                        Write-Host -Fore Green "[+] $PC is clean. Updating tested PCs list."
                        Add-Content -Path $testedPCs -Value $PC
                    }
                }
            } 
        }
    }
}
